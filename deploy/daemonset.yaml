---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: k22s-sa
  namespace: kube-system

---


apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: k22r
  namespace: kube-system
  labels:
    app.kubernetes.io/component: metrics
    app.kubernetes.io/name: k22r
  annotations:
    prometheus.io/port: "9943"
    prometheus.io/scrape: "true"
    prometheus.io/path: "/metrics"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: metrics
      app.kubernetes.io/name: k22r
  template:
    metadata:
      labels:
        app.kubernetes.io/component: metrics
        app.kubernetes.io/name: k22r
    spec:
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      tolerations:
      - operator: Exists
      containers:
      - name: k22r
        image: ghcr.io/autonubil/k22r:latest
        imagePullPolicy: Always
        securityContext:
          capabilities:
            add: ["NET_ADMIN", "NET_RAW"]
        env:
          - name: K8S_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: K22R_COLLECTOR
            value: 192.168.42.115
          - name: K22R_GROUP_NAME
            value: opsanio
        ports:
          - containerPort: 9943
            name: prometheus

        resources:
          limits:
            memory: 768Mi
          requests:
            cpu: 200m
            memory: 400Mi
      # it may be desirable to set a high priority class to ensure that a DaemonSet Pod
      # preempts running Pods
      # priorityClassName: important
      terminationGracePeriodSeconds: 30
